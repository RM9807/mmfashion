name: Push MMFashion Model to Replicate (Definitive)

on:
  workflow_dispatch:
    inputs:
      model_name:
        description: 'Enter your Replicate model name (e.g., your-username/aura-body-shape-analysis)'
        required: true

jobs:
  push_to_replicate:
    name: Push MMFashion to Replicate
    runs-on: ubuntu-latest

    steps:
      - name: Free disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          docker-images: false

      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Setup Cog tool
        uses: replicate/setup-cog@v2
        with:
          token: ${{ secrets.REPLICATE_API_TOKEN }}

      # ==========================================================
      # THE "SOLVE THIS FOREVER" SCRIPT
      # ==========================================================
      - name: Find, Download, and Push
        run: |
          echo "Searching for cog.yaml in the entire workspace..."
          
          # Find the directory containing cog.yaml
          # This searches for the file and gets its parent directory path
          COG_DIR=$(find . -name cog.yaml -print -quit | xargs dirname)
          
          if [ -z "$COG_DIR" ]; then
            echo "::error::Could not find cog.yaml anywhere! Listing all files for debugging:"
            ls -R
            exit 1
          fi
          
          echo "Found cog.yaml in directory: $COG_DIR"
          echo "This will be our working directory."

          # Change into the correct directory first
          cd "$COG_DIR"

          echo "Current directory is now: $(pwd)"
          echo "Downloading model weights into this directory..."
          
          # Now, run the download from within the correct directory
          mkdir -p checkpoints
          wget -O checkpoints/epoch_100.pth "https://storage.googleapis.com/aura-world-class-models-300b/epoch_100.pth"

          echo "Download complete. Pushing to Replicate..."

          # Finally, run the push command from this directory
          cog push r8.im/${{ inputs.model_name }}